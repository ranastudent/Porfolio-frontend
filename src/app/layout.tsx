import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { ReduxProvider } from "../redux/providers/ReduxProvider";
import LayoutContent from "../components/LayoutContent";
import { Toaster } from "react-hot-toast";

// âœ… Fonts
const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// âœ… Metadata
export const metadata: Metadata = {
  title: "Portfolio",
  description: "Generated by Next.js & Prisma",
};

// âœ… Client-side Auth Hydrator
import AuthHydrator from "@/components/AuthHydrator";

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <ReduxProvider>
          {/* ðŸ”¹ Hydrate auth state from localStorage */}
          <AuthHydrator />
          <LayoutContent>{children}</LayoutContent>
          <Toaster position="top-right" />
        </ReduxProvider>
      </body>
    </html>
  );
}
